<Window x:Class="_481kiosk.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_481kiosk"
        mc:Ignorable="d"
        Title="Calgary Information Kiosk" Height="696" Width="900" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
    <Window.Resources>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource Button.Disabled.Background}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Disabled.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid x:Name="MainGrid" Background="#FF00CFCF">
        <TabControl x:Name="tabControl" HorizontalAlignment="Left" Height="667" VerticalAlignment="Top" Width="900" FontFamily="Segoe UI Emoji" BorderBrush="{x:Null}" Style="{DynamicResource TabControlStyle1}" Background="#FF00CFCF" Margin="0,0,-6,0">
            <TabItem x:Name="tabLanguage" Header="Language" MouseLeftButtonUp="langTab_Click"  Style="{DynamicResource TabStyle}" Height="35" Width="896" BorderBrush="#FFACACAC" HorizontalAlignment="Left" Margin="0,-0.5,0,0.5">
                <TabItem.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#F0F0F0" Offset="0.0"/>
                        <GradientStop Color="#E5E5E5" Offset="1.0"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
                    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#ECF4FC" Offset="0.0"/>
                        <GradientStop Color="#DCECFC" Offset="1.0"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FF00CFCF"/>
                    <Style x:Key="TabStyle" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="{DynamicResource TabItem.Selected.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="6,2,6,2"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{DynamicResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Selector.IsSelected" Value="True"/>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <Grid x:Name="backgroundForTab" Margin="-3,-4.5,-5,-3.333" Background="#FF00CFCF">
                    <Label x:Name="labelSelectLanguage" Content="Welcome To" HorizontalAlignment="Left" Margin="73,55,0,0" VerticalAlignment="Top" Height="auto" Width="auto" FontSize="48" FontFamily="/481kiosk;component/Fonts/#Bebas Neue Regular"/>
                    <Label x:Name="labelCalgary" Content="Calgary Kiosk" HorizontalAlignment="Left" Margin="210,96.68,0,0" VerticalAlignment="Top" FontFamily="/481kiosk;component/Fonts/#Bebas Neue Bold" FontSize="106.667" Height="143.04" Width="522"/>
                    <Label x:Name="labelCityGuide" Content="Please Select a language" HorizontalAlignment="Left" Margin="68,272.72,0,0" FontFamily="Segoe UI" FontSize="18.667" Width="300" Height="43.28" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment"/>
                    <Button x:Name="btnEnglish" Content="English" HorizontalAlignment="Left" Margin="72,316,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Click="btnEnglish_Click" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnFrench" Content="Français" HorizontalAlignment="Left" Margin="265,316,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnSpanish" Content="Español" HorizontalAlignment="Left" Margin="458,316,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnChinese" Content="中国" HorizontalAlignment="Left" Margin="651,316,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnHindi" Content="हिंदी" HorizontalAlignment="Left" Margin="72,458,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnArabic" Content="العربية" HorizontalAlignment="Left" Margin="265,458,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnRussian" Content="Русский" HorizontalAlignment="Left" Margin="458,458,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                    <Button x:Name="btnJapanese" Content="日本語" HorizontalAlignment="Left" Margin="651,458,0,0" VerticalAlignment="Top" Width="157" Height="96" FontSize="24" Style="{DynamicResource ButtonStyle1}"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
